Testing

== Dependencies ==

Running the unit tests for this extension requires the following:

1. A linux-based system, preferably Ubuntu for following these instructions
2. PHP 5.3+
3. PHPUnit 3.7 and the related dependencies (see below)
4. All the usual Magento dependencies, including php5-curl
5. A working (supported) Magento installation
6. This extension, installed correctly (see the README.txt document)

== Install PHPUnit ==

1. Install pear: $ sudo apt-get install php-pear

2. Install PHPUnit and the related dependencies:
    # pear config-set auto_discover 1
    # pear install pear.phpunit.de/PHPUnit
    # pear install pear.phpunit.de/PHP_Invoker
    # pear install pear.phpunit.de/DbUnit
    # pear install pear.phpunit.de/PHPUnit_Selenium
    
    These dependencies may vary depending on system configuration. If the tests die with a "No such file" error, usually a dependency will be missing. See here for other possibilities: http://phpunit.de/manual/3.7/en/installation.html

== Running Tests ==

1. cd to the tests directory:
    $ cd app/code/community/Signifyd/Connect/tests/

2. Run PHPUnit:
    $ phpunit Signifyd_Connect_SignifydTest signifyd.php


== Testing tools ==

A number of scripts for automated testing are available in ./testbed. The system works like this:

1. Any number of Magento distributions are downloaded and extracted into uniquely named folders under ./testbed
2. The install.sh script is run once per desired instance (usage info is available on first run). This will take a very long time if there are more than a few Magento instances.
3. The ./deploy.sh script is run once to copy the extension into the correct place for each install.
4. The ./init.sh script is run once to finalise installation of each copy of the extension. Fix any errors that occur.
5. The ./test.sh script will attempt to automatically run the phpunit tests for each Magento install.
6. After each change to the extension/tests, run ./clean.sh then ./deploy.sh again. Caches may also need to be flushed, etc.
